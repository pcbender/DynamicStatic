{
  "openapi": "3.1.1",
  "info": {
    "title": "Dynamic Static Weaver API",
    "description": "Weaver actor API for the Dynamic Static AI CMS - handles authentication, job management, and GitHub integration",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://webbness.net"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "Service-to-service API key issued to Echo (WEAVER_API_KEY)"
      },
      "SessionBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Ephemeral job-scoped session token (weaver_session) used for follow-up secure actions"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "required": ["error"]
      },
      "ContentJobPayload": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["article", "post", "page"],
            "description": "Type of content being created"
          },
          "metadata": {
            "$ref": "#/components/schemas/ContentMetadata"
          },
          "content": {
            "$ref": "#/components/schemas/ContentBody"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentAsset"
            },
            "description": "Associated media and files"
          },
          "seo": {
            "$ref": "#/components/schemas/SEOData"
          },
          "deployment": {
            "$ref": "#/components/schemas/DeploymentConfig"
          }
        },
        "required": ["type", "metadata", "content", "deployment"]
      },
      "ContentMetadata": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Article title"
          },
          "description": {
            "type": "string",
            "description": "Brief article description"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Content tags for categorization"
          },
          "category": {
            "type": "string",
            "description": "Primary content category"
          },
          "author": {
            "type": "string",
            "description": "Content author name"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "description": "Intended publication date"
          },
          "template": {
            "type": "string",
            "default": "article-template",
            "description": "Template to use for rendering"
          }
        },
        "required": ["title"]
      },
      "ContentBody": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "enum": ["markdown", "html"],
            "default": "markdown",
            "description": "Content format"
          },
          "body": {
            "type": "string",
            "description": "Main content body"
          },
          "excerpt": {
            "type": "string",
            "description": "Content excerpt or summary"
          }
        },
        "required": ["format", "body"]
      },
      "ContentAsset": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["image", "video", "document", "audio"],
            "description": "Asset type"
          },
          "name": {
            "type": "string",
            "description": "Asset filename or identifier"
          },
          "url": {
            "type": "string",
            "description": "Asset URL or base64 data URI"
          },
          "alt": {
            "type": "string",
            "description": "Alternative text for accessibility"
          },
          "caption": {
            "type": "string",
            "description": "Asset caption or description"
          },
          "placement": {
            "type": "string",
            "enum": ["hero", "inline", "gallery", "attachment"],
            "default": "inline",
            "description": "How the asset should be placed in content"
          }
        },
        "required": ["type", "name", "url"]
      },
      "SEOData": {
        "type": "object",
        "properties": {
          "metaDescription": {
            "type": "string",
            "description": "Meta description for search engines"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "SEO keywords"
          },
          "canonicalUrl": {
            "type": "string",
            "description": "Canonical URL for this content"
          }
        }
      },
      "DeploymentConfig": {
        "type": "object",
        "properties": {
          "repository": {
            "type": "string",
            "description": "GitHub repository in format owner/repo"
          },
          "branch": {
            "type": "string",
            "default": "main",
            "description": "Target branch for deployment"
          },
          "basePath": {
            "type": "string",
            "default": "/content/",
            "description": "Base path within repository"
          },
          "filename": {
            "type": "string",
            "description": "Target filename for the content"
          }
        },
        "required": ["repository", "filename"]
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by_sub": {
            "type": "string"
          },
          "created_by_email": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/ContentJobPayload"
          }
        },
        "required": ["id", "status", "created_at", "updated_at", "payload"]
      }
    }
  },
  "security": [],
  "paths": {
    
    "/.well-known/jwks.json": {
      "get": {
        "operationId": "getJWKS",
        "summary": "JSON Web Key Set endpoint for token verification",
        "security": [],
        "responses": {
          "200": {
            "description": "JWKS retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "post": {
        "operationId": "insertJob",
        "summary": "Create a new publishing job (Echo â†’ Weaver)",
        "security": [ { "ApiKeyAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payload": { "$ref": "#/components/schemas/ContentJobPayload" }
                },
                "required": ["payload"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job inserted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "job_id": {
                      "type": "string"
                    },
                    "weaver_session": {
                      "type": "string",
                      "description": "Ephemeral session token (JWT) if session support enabled"
                    }
                  },
                  "required": ["status", "job_id"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error while inserting job"
          }
        }
      }
    },
    "/jobs/list": {
      "post": {
        "operationId": "getAllJobs",
  "summary": "List jobs filtered by status (API key required; optional session narrows to its job)",
        "security": [ { "ApiKeyAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "description": "Comma-separated list of statuses, or * for all" },
                  "limit": { "type": "integer", "minimum": 1, "maximum": 200, "default": 50 },
                  "offset": { "type": "integer", "minimum": 0, "default": 0 }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Jobs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Job" }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "integer" },
                        "limit": { "type": "integer" },
                        "offset": { "type": "integer" }
                      },
                      "required": ["total","limit","offset"]
                    }
                  },
                  "required": ["items","pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Missing status parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Reserved (not used)"
          },
          "405": {
            "description": "Method not allowed - only POST supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error while retrieving jobs"
          }
        }
      }
    },
    "/job/status": {
      "get": {
        "operationId": "getJobStatus",
        "summary": "Get the status of a publishing job (optionally supply session bearer)",
        "security": [],
        "parameters": [
          { "name": "id", "in": "query", "required": true, "schema": { "type": "string" }, "description": "Job ID" }
        ],
        "responses": {
          "200": {
            "description": "Job status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed - only GET supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error while retrieving job status"
          }
        }
      }
    },
    "/jobs/update": {
      "post": {
        "operationId": "updateJobStatus",
        "summary": "Update the status (API key required; optionally supply session bound to job)",
        "security": [ { "ApiKeyAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object",
                    "description": "Optional updated payload data",
                    "$ref": "#/components/schemas/ContentJobPayload"
                  }
                },
                "required": ["id", "status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": ["status"]
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields (id, status)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": { "description": "Reserved (not used)" },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed - only POST supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error while updating job"
          }
        }
      }
    },
    "/jobs/artifact": {
      "get": {
        "operationId": "getJobArtifact",
        "summary": "Retrieve job payload artifact (API key + optional HMAC + optional session)",
        "security": [ { "ApiKeyAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "query", "required": true, "schema": { "type": "string" }, "description": "Job ID" },
          { "name": "X-Timestamp", "in": "header", "required": false, "schema": { "type": "string" }, "description": "Unix timestamp if using HMAC" },
          { "name": "X-Signature", "in": "header", "required": false, "schema": { "type": "string" }, "description": "HMAC signature of timestamp" }
        ],
        "responses": {
          "200": {
            "description": "Artifact (job payload) retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContentJobPayload" }
              }
            }
          },
          "400": {
            "description": "Missing id parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid HMAC signature or missing headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}

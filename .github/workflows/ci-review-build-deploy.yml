name: CI • Review → Build → Deploy
on:
  push:
    branches: [develop, main]
    tags: ['v*.*.*']
  pull_request:
    branches: [develop, main]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  AI_REVIEW_MODE: 'light'

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: AI review (mock when OPUS_* absent)
        id: aireview
        run: |
          echo "STATUS: OK"
          echo "clean=true" >> $GITHUB_OUTPUT
    outputs:
      clean: ${{ steps.aireview.outputs.clean }}

  build:
    needs: ai-review
    if: needs.ai-review.outputs.clean == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Build (placeholder creates dist/)
        run: |
          mkdir -p dist/data
          echo '{"title":"Dynamic Static Starter"}' > dist/data/menu.json
          echo '{"title":"Footer"}' > dist/data/footer.json
          node scripts/gen-manifest.js
          echo "<!doctype html><meta charset=utf-8><title>Dynamic Static Starter</title><h1>It works</h1>" > dist/index.html
          cp public/.htaccess dist/.htaccess
      - uses: actions/upload-artifact@v4
        with:
          name: site-dist
          path: dist
          if-no-files-found: error

  verify-prod-tag:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Check tag points to main
        run: |
          git fetch origin main
          TAG_SHA="$(git rev-parse $GITHUB_REF)"
          git merge-base --is-ancestor "$TAG_SHA" origin/main

  deploy-dev:
    needs: build
    if: needs.ai-review.outputs.clean == 'true' && startsWith(github.ref,'refs/heads/develop')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: site-dist
          path: dist
      - name: Write SSH key
        run: echo "${{ secrets.SSH_PRIVATE_KEY_DEV }}" > key_dev && chmod 600 key_dev
      - name: Write known_hosts
        run: mkdir -p ~/.ssh && echo "${{ secrets.SSH_KNOWN_HOSTS_DEV }}" >> ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
      - name: Require DEV_STATIC_DEPLOY=1
        run: |
          if [ "${{ secrets.DEV_STATIC_DEPLOY || '0' }}" != "1" ]; then
            echo "DEV deploy disabled (set DEV_STATIC_DEPLOY=1 to enable)"; exit 0; fi
      - name: Deploy via safe-rsync (DRY-RUN first)
        run: ./scripts/safe-rsync.sh
        env:
          KEY_FILE: key_dev
          USER: ${{ secrets.SSH_USER_DEV }}
          HOST: ${{ secrets.SSH_HOST_DEV }}
          PORT: ${{ secrets.SSH_PORT_DEV || 22 }}
          WEBROOT: ${{ secrets.WEBROOT_DEV }}
          SRC_DIR: dist
          EXPECT_TOKEN: dynamicstatic.net
          MARKER_FILE: .allow-deploy
          DRY_RUN: "yes"
          DELETE: "no"

  deploy-prod:
    needs: [build, verify-prod-tag]
    if: needs.ai-review.outputs.clean == 'true' && startsWith(github.ref,'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: site-dist
          path: dist
      - name: Write SSH key
        run: echo "${{ secrets.SSH_PRIVATE_KEY_PROD }}" > key_prod && chmod 600 key_prod
      - name: Write known_hosts
        run: mkdir -p ~/.ssh && echo "${{ secrets.SSH_KNOWN_HOSTS_PROD }}" >> ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
      - name: Deploy via safe-rsync (DRY-RUN)
        run: ./scripts/safe-rsync.sh
        env:
          KEY_FILE: key_prod
          USER: ${{ secrets.SSH_USER_PROD }}
          HOST: ${{ secrets.SSH_HOST_PROD }}
          PORT: ${{ secrets.SSH_PORT_PROD || 22 }}
          WEBROOT: ${{ secrets.WEBROOT_PROD }}
          SRC_DIR: dist
          EXPECT_TOKEN: dynamicstatic.net
          MARKER_FILE: .allow-deploy
          DRY_RUN: "yes"
          DELETE: "no"
